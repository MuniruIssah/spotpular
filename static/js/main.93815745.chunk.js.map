{"version":3,"sources":["layouts/PlaygroundLayout/PlaygroundLayout.module.css","components/GridDisplay/GridDisplay.module.css","components/Cards/CircularImageCard/CircularImageCard.module.css","components/Cards/BoxImageCard/BoxImageCard.module.css","assets/spotifyWhite.png","components/Icon/icon.js","components/SPHeader/spHeader.js","layouts/headerAndContent/headerAndContentLayout.js","components/LoudText/loudText.js","components/StartButton/startButton.js","pages/LandingPage/subComponents/landingPageContent.js","pages/LandingPage/landingPage.js","assets/burn.jpeg","assets/Davido.jpg","layouts/PlaygroundLayout/playgroundLayout.js","components/FilterStrip/filterStrip.js","components/GridDisplay/gridDisplay.js","components/Cards/BottomImageCard/bottomImageCard.js","components/Modal/modal.js","pages/PlayGround/playground.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","features/score/scoreSlice.js","app/store.js","serviceWorker.js","index.js","components/GameplayDisplay/GamePlayDisplay.module.css","components/SPSideBar/SpSideBar.module.css","components/Cards/BottomImageCard/BottomImageCard.module.css","components/GameplayDisplay/SpotThePop/SpotThePop.module.css","components/Modal/Modal.module.css","components/FilterStrip/FilterStrip.module.css","components/Icon/Icon.module.css","layouts/headerAndContent/HeaderAndContentLayout.module.css","components/SPHeader/SPHeader.module.css","components/HowTo/HowTo.module.css","components/LoudText/LoudText.module.css","components/StartButton/StartButton.module.css"],"names":["module","exports","Icon","className","styles","spIcon","src","alt","SpHeader","spHeader","HeaderAndContentLayout","children","headerAndContentLayout","LoudText","loudText","StartButton","to","startButton","LandingPageContent","LandingPage","PlaygroundLayout","playgroundLayout","FilterStrip","filterStrip","map","button","title","FilterStripButton","filterStripButton","GridDisplay","gridDisplay","BottomImageCard","image","usePalette","data","loading","error","bottomImageCard","style","backgroundColor","darkVibrant","imageDiv","backgroundImage","Modal","useState","visible","setVisible","modal","modalForm","onClick","closeButton","icon","faPlus","modalHeading","ModalForm","modalFormWrapper","formLabels","modalFormButton","RadioButton","radioRef","React","createRef","type","value","name","ref","display","alert","current","checked","radioButton","RadioGroup","radioButtonGroup","radioType","SelectNumber","numberSelect","min","SelectMode","modeSelect","selectOption","Playground","burna","davido","App","exact","path","component","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","scoreSlice","scores","updateScore","store","configureStore","reducer","counter","counterReducer","scoreReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93815745.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"playgroundLayout\":\"PlaygroundLayout_playgroundLayout__1AxaL\",\"plLInner\":\"PlaygroundLayout_plLInner__2zP-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridDisplay\":\"GridDisplay_gridDisplay__20WlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circularImageCard\":\"CircularImageCard_circularImageCard__2R9aO\",\"imageDiv\":\"CircularImageCard_imageDiv__32aGa\",\"title\":\"CircularImageCard_title__GwNpz\",\"description\":\"CircularImageCard_description__3NwcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxImageCard\":\"BoxImageCard_boxImageCard__1krZs\",\"imageDiv\":\"BoxImageCard_imageDiv__3WgiI\",\"title\":\"BoxImageCard_title__uEFPx\",\"description\":\"BoxImageCard_description__1_sU6\"};","export default __webpack_public_path__ + \"static/media/spotifyWhite.64280787.png\";","import React from \"react\";\r\nimport styles from \"./Icon.module.css\";\r\nimport spIcon from \"../../assets/spotifyWhite.png\"\r\nexport const Icon = () => {\r\n  return (\r\n    <div className={styles.spIcon}>\r\n      <img src={spIcon} alt=\"spotify icon\" />\r\n      <span>Spotpular</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styles from \"./SPHeader.module.css\";\r\nimport { Icon } from '../Icon/icon';\r\nconst SpHeader = () => {\r\n    return (\r\n        <header className={styles.spHeader}>\r\n            <Icon/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default SpHeader\r\n","import React from \"react\";\r\nimport styles from \"./HeaderAndContentLayout.module.css\";\r\nimport SpHeader from \"../../components/SPHeader/spHeader\";\r\nconst HeaderAndContentLayout = ({ children }) => {\r\n  return (\r\n    <div className={styles.headerAndContentLayout}>\r\n      <SpHeader />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderAndContentLayout;\r\n","import React from 'react'\r\nimport styles from './LoudText.module.css'\r\nconst LoudText = () => {\r\n    return (\r\n        <h1 className={styles.loudText}>Spot who's Popular</h1>\r\n    )\r\n}\r\n\r\nexport default LoudText\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./StartButton.module.css\";\r\nconst StartButton = () => {\r\n  return (\r\n    <Link to=\"/play\">\r\n      <button className={styles.startButton}> Play, it's Free</button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StartButton;\r\n","import React from \"react\";\r\nimport { HowTo } from \"../../../components/HowTo/howTo\";\r\nimport LoudText from \"../../../components/LoudText/loudText\";\r\nimport StartButton from \"../../../components/StartButton/startButton\";\r\n\r\nconst LandingPageContent = () => {\r\n  return (\r\n    <>\r\n      <LoudText />\r\n      <StartButton />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPageContent;\r\n","import React from \"react\";\r\nimport HeaderAndContentLayout from \"../../layouts/headerAndContent/headerAndContentLayout\";\r\nimport LandingPageContent from \"./subComponents/landingPageContent\";\r\nconst LandingPage = () => {\r\n  return <HeaderAndContentLayout><LandingPageContent/></HeaderAndContentLayout>;\r\n};\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/burn.7cb81ae3.jpeg\";","export default __webpack_public_path__ + \"static/media/Davido.e71a2d01.jpg\";","import React from \"react\";\r\nimport SpHeader from \"../../components/SPHeader/spHeader\";\r\nimport styles from \"./PlaygroundLayout.module.css\";\r\nconst PlaygroundLayout = ({ children }) => {\r\n  return (\r\n    <div className={styles.playgroundLayout}>\r\n      <SpHeader />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaygroundLayout;\r\n","import React from \"react\";\r\nimport styles from \"./FilterStrip.module.css\";\r\nexport const FilterStrip = () => {\r\n  const buttonList = [\"All Genres\", \"Countries\"];\r\n  return (\r\n    <div className={styles.filterStrip}>\r\n      {buttonList.map((button) => (\r\n        <FilterStripButton key={button} title={button} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n//Strip Button\r\n\r\nconst FilterStripButton = ({ title }) => {\r\n  return <button className={styles.filterStripButton}>{title}</button>;\r\n};\r\n","import React from 'react'\r\nimport styles from \"./GridDisplay.module.css\";\r\nconst GridDisplay = ({children}) => {\r\n    return (\r\n        <div className={styles.gridDisplay}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridDisplay\r\n","import React from \"react\";\r\nimport styles from \"./BottomImageCard.module.css\";\r\nimport {  usePalette} from \"react-palette\";\r\nexport const BottomImageCard = ({ image, title }) => {\r\n    const { data, loading, error}=usePalette(image)\r\n  return (\r\n    <div className={styles.bottomImageCard} style={{backgroundColor:data.darkVibrant}}>\r\n      <div\r\n        className={styles.imageDiv}\r\n        style={{ backgroundImage: `url(${image})` }}\r\n      ></div>\r\n      <span className={styles.title}>{title}</span>\r\n    </div>\r\n  );\r\n};\r\n","import styles from \"./Modal.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Modal = () => {\r\n  const [visible, setVisible] = useState(true);\r\n  const closeModal=()=>{\r\n    setVisible(false)\r\n  }\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <div className={styles.modal}>\r\n          <div className={styles.modalForm}>\r\n            <div onClick={closeModal} className={styles.closeButton}><FontAwesomeIcon icon={faPlus} /></div>\r\n            <span className={styles.modalHeading}>Get Started</span>\r\n            <ModalForm />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst ModalForm = () => {\r\n  return (\r\n    <form className={styles.modalFormWrapper}>\r\n      <label className={styles.formLabels}>Select Game Type</label>\r\n      <RadioGroup />\r\n      <label className={styles.formLabels}>Select List Height</label>\r\n      <SelectNumber />\r\n      <label className={styles.formLabels}>Select List Mode</label>\r\n      <SelectMode />\r\n\r\n      <button className={styles.modalFormButton}>Let's See You Go</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst RadioButton = ({ title }) => {\r\n  const radioRef = React.createRef(null);\r\n  const handleChange = () => {\r\n    alert(radioRef.current.checked);\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"radio\"\r\n        value={`${title}`}\r\n        name=\"gameType\"\r\n        ref={radioRef}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleChange}\r\n        className={styles.radioButton}\r\n      >\r\n        {title}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RadioGroup = () => {\r\n  const radioTypes = [\"Spot The Pop\", \"Sort The Spots\"];\r\n  return (\r\n    <div className={styles.radioButtonGroup}>\r\n      {radioTypes.map((radioType) => (\r\n        <RadioButton key={radioType} title={radioType} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectNumber = () => {\r\n  return <input type=\"number\" className={styles.numberSelect} min={2} />;\r\n};\r\n\r\nconst SelectMode = () => {\r\n  const selectOptions = [\"Epic\", \"Race Against Time\"];\r\n  return (\r\n    <select className={styles.modeSelect}>\r\n      {selectOptions.map((selectOption) => (\r\n        <option key={selectOption} value={selectOption}>\r\n          {selectOption}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Playground.module.css\";\r\nimport burna from \"../../assets/burn.jpeg\";\r\nimport davido from \"../../assets/Davido.jpg\";\r\n\r\nimport PlaygroundLayout from \"../../layouts/PlaygroundLayout/playgroundLayout\";\r\nimport { FilterStrip } from \"../../components/FilterStrip/filterStrip\";\r\nimport { CircularImageCard } from \"../../components/Cards/CircularImageCard/circularImageCard\";\r\nimport GridDisplay from \"../../components/GridDisplay/gridDisplay\";\r\nimport { BoxImageCard } from \"../../components/Cards/BoxImageCard/boxImageCard\";\r\nimport { BottomImageCard } from \"../../components/Cards/BottomImageCard/bottomImageCard\";\r\nimport Modal from \"../../components/Modal/modal\";\r\nimport GamePlayDisplay from \"../../components/GameplayDisplay/gamePlayDisplay\";\r\nconst Playground = () => {\r\n  return (\r\n    <PlaygroundLayout>\r\n      {/* <GamePlayDisplay /> */}\r\n      <Modal /> \r\n      <FilterStrip />\r\n      <GridDisplay>\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      <BottomImageCard image={davido} title=\"Davido\" />\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      <BottomImageCard image={davido} title=\"Davido\" />\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      <BottomImageCard image={davido} title=\"Davido\" />\r\n      <BottomImageCard image={burna} title=\"Burna Boy\" />\r\n      </GridDisplay> \r\n    </PlaygroundLayout>\r\n  );\r\n};\r\n\r\nexport default Playground;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { SpSideBar } from \"./components/SPSideBar/spSideBar\";\r\nimport LandingPage from \"./pages/LandingPage/landingPage\";\r\nimport Playground from \"./pages/PlayGround/playground\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route exact path='/' component={LandingPage}/>\r\n        <Route path='/play' component={Playground}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Counter />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <span>\r\n          <span>Learn </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux-toolkit.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux Toolkit\r\n          </a>\r\n          ,<span> and </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://react-redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React Redux\r\n          </a>\r\n        </span> */\r\n","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  scores: 0,\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\n// export const incrementAsync = createAsyncThunk(\r\n//   'counter/fetchCount',\r\n//   async (amount) => {\r\n//     const response = await fetchCount(amount);\r\n//     // The value we return becomes the `fulfilled` action payload\r\n//     return response.data;\r\n//   }\r\n// );\r\n\r\nexport const scoreSlice = createSlice({\r\n  name: \"scores\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    updateScore: (state, action) => {\r\n      state.scores += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  //   extraReducers: (builder) => {\r\n  //     builder\r\n  //       .addCase(incrementAsync.pending, (state) => {\r\n  //         state.status = 'loading';\r\n  //       })\r\n  //       .addCase(incrementAsync.fulfilled, (state, action) => {\r\n  //         state.status = 'idle';\r\n  //         state.value += action.payload;\r\n  //       });\r\n  //   },\r\n});\r\n\r\nexport const { updateScore } = scoreSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectScore = (state) => state.scores.score;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n//   const currentValue = selectCount(getState());\r\n//   if (currentValue % 2 === 1) {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }\r\n// };\r\n\r\nexport default scoreSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport scoreReducer from '../features/score/scoreSlice'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    scores:scoreReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePlayDisplay\":\"GamePlayDisplay_gamePlayDisplay__AoD7T\",\"artists\":\"GamePlayDisplay_artists__3dO54\",\"artistsThumb\":\"GamePlayDisplay_artistsThumb__2NFXf\",\"nextButton\":\"GamePlayDisplay_nextButton__3Zvxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spSideBar\":\"SpSideBar_spSideBar__39IZx\",\"spSideBarButton\":\"SpSideBar_spSideBarButton__27lL4\",\"buttonWrap\":\"SpSideBar_buttonWrap__3V5Gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomImageCard\":\"BottomImageCard_bottomImageCard__1UeCL\",\"imageDiv\":\"BottomImageCard_imageDiv__2KPhP\",\"title\":\"BottomImageCard_title__3OIQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spotThePop\":\"SpotThePop_spotThePop__3FDbn\",\"spotThePopCard\":\"SpotThePop_spotThePopCard__3CVuL\",\"Icon\":\"SpotThePop_Icon__1FP6Y\",\"yhhhhh\":\"SpotThePop_yhhhhh__2zbsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2XJco\",\"closeButton\":\"Modal_closeButton__30GVD\",\"modalForm\":\"Modal_modalForm__3TexQ\",\"modalHeading\":\"Modal_modalHeading__slIo7\",\"modalFormWrapper\":\"Modal_modalFormWrapper__X_O1K\",\"modalFormButton\":\"Modal_modalFormButton__9-tRx\",\"radioButton\":\"Modal_radioButton__2Hgfy\",\"radioButtonGroup\":\"Modal_radioButtonGroup__1bgId\",\"formLabels\":\"Modal_formLabels__2R099\",\"numberSelect\":\"Modal_numberSelect__3kVIg\",\"modeSelect\":\"Modal_modeSelect__369EF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterStrip\":\"FilterStrip_filterStrip__16-Xi\",\"filterStripButton\":\"FilterStrip_filterStripButton__2FCN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spIcon\":\"Icon_spIcon__2C-JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerAndContentLayout\":\"HeaderAndContentLayout_headerAndContentLayout__FOMmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spHeader\":\"SPHeader_spHeader__37RGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"howToPlay\":\"HowTo_howToPlay__1yTnD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loudText\":\"LoudText_loudText__1aMDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startButton\":\"StartButton_startButton__1_PEL\"};"],"sourceRoot":""}